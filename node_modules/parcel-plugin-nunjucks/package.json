{
  "_args": [
    [
      "devmattrick/parcel-plugin-nunjucks",
      "/home/joe/JsForWeb/Innovation"
    ]
  ],
  "_from": "devmattrick/parcel-plugin-nunjucks",
  "_id": "parcel-plugin-nunjucks@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/parcel-plugin-nunjucks",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/devmattrick/parcel-plugin-nunjucks/master/package.json",
      "gitUrl": "git://github.com/devmattrick/parcel-plugin-nunjucks.git",
      "httpsUrl": "git+https://github.com/devmattrick/parcel-plugin-nunjucks.git",
      "shortcut": "github:devmattrick/parcel-plugin-nunjucks",
      "ssh": "git@github.com:devmattrick/parcel-plugin-nunjucks.git",
      "sshUrl": "git+ssh://git@github.com/devmattrick/parcel-plugin-nunjucks.git",
      "type": "github"
    },
    "name": null,
    "raw": "devmattrick/parcel-plugin-nunjucks",
    "rawSpec": "devmattrick/parcel-plugin-nunjucks",
    "scope": null,
    "spec": "github:devmattrick/parcel-plugin-nunjucks",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git://github.com/devmattrick/parcel-plugin-nunjucks.git#c93584d1997c34c7c75cf0a4620760d5f3b320a5",
  "_shasum": "e5ff554e1d99fcc74c2d17999c175b828dbaaa82",
  "_shrinkwrap": null,
  "_spec": "devmattrick/parcel-plugin-nunjucks",
  "_where": "/home/joe/JsForWeb/Innovation",
  "author": {
    "email": "git@mattrick.me",
    "name": "Matthew McCune"
  },
  "bugs": {
    "url": "https://github.com/devmattrick/parcel-plugin-nunjucks/issues"
  },
  "dependencies": {
    "nunjucks-parser": "^0.0.3"
  },
  "description": "Parcel plugin to compile Nunjucks templates.",
  "devDependencies": {},
  "engines": {
    "node": ">= 7.6"
  },
  "files": [
    "index.js",
    "src/NunjucksAsset.js"
  ],
  "gitHead": "c93584d1997c34c7c75cf0a4620760d5f3b320a5",
  "homepage": "https://github.com/devmattrick/parcel-plugin-nunjucks#readme",
  "keywords": [
    "asset",
    "build",
    "nunjucks",
    "parcel",
    "parcel-plugin",
    "plugin",
    "template"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "parcel-plugin-nunjucks",
  "optionalDependencies": {},
  "peerDependencies": {
    "nunjucks": "^3.0.0",
    "parcel-bundler": "^1.0.0"
  },
  "readme": "# parcel-plugin-nunjucks\n\n[![NPM Version](https://img.shields.io/npm/v/parcel-plugin-nunjucks.svg)](https://www.npmjs.org/package/parcel-plugin-nunjucks)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [NAME](#name)\n- [INSTALLATION](#installation)\n- [SYNOPSIS](#synopsis)\n- [DESCRIPTION](#description)\n- [CONFIGURATION](#configuration)\n  - [Options](#options)\n    - [data](#data)\n    - [env](#env)\n    - [filters](#filters)\n    - [options](#options)\n    - [root](#root)\n- [COMPATIBILITY](#compatibility)\n- [SEE ALSO](#see-also)\n- [VERSION](#version)\n- [AUTHOR](#author)\n- [COPYRIGHT AND LICENSE](#copyright-and-license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# NAME\n\nparcel-plugin-nunjucks - [Parcel](https://parceljs.org/) support for [nunjucks](https://mozilla.github.io/nunjucks/) templates\n\n# INSTALLATION\n\n    $ npm install nunjucks # peer dependency\n    $ npm install parcel-plugin-nunjucks\n\n# SYNOPSIS\n\n```\n$ cat src/html/index.njk\n```\n\n```jinja\n{% extends \"layout.njk\" %}\n\n{% block body %}\n    <h1>Hello, {{ name }}!</h1>\n{% endblock %}\n```\n\n```\n$ cat nunjucks.config.js\n```\n\n```javascript\nmodule.exports = {\n    root: \"./src/html\",\n    data: { name: process.env.USER },\n}\n```\n\n```\n$ parcel build src/html/index.njk\n```\n\n# DESCRIPTION\n\nThis is a Parcel plugin which uses nunjucks to translate templates with an `.njk` extension into HTML assets.\n\nAs with HTML assets, nunjucks templates can be top-level entries, or dependencies referenced from other documents or templates.\n\n# CONFIGURATION\n\nAn [environment](https://mozilla.github.io/nunjucks/api.html#environment) for each (or every) nunjucks template\nknown to Parcel can be configured by creating a `nunjucks` entry in the project's package.json file,\nor by exporting a configuration object from one of the following files:\n\n- nunjucks.config.js\n- .nunjucks.js\n- .nunjucksrc\n\nThe configuration object has the following type:\n\n```typescript\ntype NunjucksConfiguration = {\n    data?:    Object | string => Object;\n    env?:     Environment | string => Environment;\n    filters?: Object;\n    options?: Object;\n    root?:    string | Array<string>;\n}\n```\n\n## Options\n\nThe following options can be defined.\n\n### data\n\nData to expose as the \"context\" in nunjucks [assets](https://parceljs.org/assets.html). Can be defined as a function,\nin which case it is called with the absolute path/URI of the template being processed and its return value is used as the data.\n\n```javascript\nmodule.exports = { data: { name: process.env.USER } }\n```\n\n### env\n\nThe [Environment](https://mozilla.github.io/nunjucks/api.html#environment) instance to use. Can be defined as a function,\nin which case it is called with the absolute path/URI of the template being processed and its return value is used as the environment.\n\n```javascript\nconst nunjucks = require('nunjucks')\nconst env = nunjucks.configure('./src/html')\n\nenv.addFilter('uc', value => value.toUpperCase())\n\nmodule.exports = { env }\n```\n\n### filters\n\nA map (object) of name/function pairs to add as filters to the environment. Ignored if the `env` option is supplied.\n\n```javascript\nmodule.exports = {\n    filters: {\n        uc: value => value.toUpperCase(),\n        lc: value => value.toLowerCase(),\n    }\n}\n```\n\n### options\n\nOptions to pass to the [`nunjucks#configure`](https://mozilla.github.io/nunjucks/api.html#configure) method,\nwhich is used to construct the Environment instance. Ignored if the `env` option is supplied.\n\n```javascript\nmodule.exports = {\n    options: { noCache: true }\n}\n```\n\n### root\n\nThe base template directory or directories. If not supplied, it defaults to the project root.\nIgnored if the `env` option is supplied.\n\n```javascript\nmodule.exports = { root: \"./src/html\" }\n```\n\n# COMPATIBILITY\n\n* Node.js >= v7.6.0\n\n# SEE ALSO\n\n* [nunjucks](https://www.npmjs.com/package/nunjucks) - a Jinja2-inspired templating engine with support for template inheritance\n* [posthtml-extend](https://www.npmjs.com/package/posthtml-extend) - a PostHTML plugin which supports Jade-like template inheritance\n* [posthtml-include](https://www.npmjs.com/package/posthtml-include) - a PostHTML plugin which supports HTML transclusion\n\n# VERSION\n\n1.0.0\n\n# AUTHOR\n\n[Matthew McCune](mailto:matthew@matthew.cx)\n\n# COPYRIGHT AND LICENSE\n\nCopyright Â© 2017-2018 by Matthew McCune.\n\nThis is free software; you can redistribute it and/or modify it under the\nterms of the [MIT license](https://opensource.org/licenses/MIT).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/devmattrick/parcel-plugin-nunjucks.git"
  },
  "scripts": {},
  "version": "1.0.0"
}
